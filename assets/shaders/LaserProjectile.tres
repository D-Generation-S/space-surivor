[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://clu8bchei4nhp"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_hu3l2"]
expanded_output_ports = [0]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_3qhtr"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_erdmr"]
parameter_name = "ColorParameter"
default_value_enabled = true
default_value = Color(1, 0, 0, 1)

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform sampler2D tex_frg_3;
uniform vec4 ColorParameter : source_color = vec4(1.000000, 0.000000, 0.000000, 1.000000);



void fragment() {
// Texture2D:3
	vec4 n_out3p0 = texture(tex_frg_3, UV);


// ColorParameter:7
	vec4 n_out7p0 = ColorParameter;


// VectorOp:6
	vec2 n_out6p0 = vec2(n_out3p0.xy) * vec2(n_out7p0.xy);


// Output:0
	COLOR.rgb = vec3(n_out6p0, 0.0);


}
"
graph_offset = Vector2(-520.349, -224.214)
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(500, -60)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture_hu3l2")
nodes/fragment/3/position = Vector2(-420, 120)
nodes/fragment/6/node = SubResource("VisualShaderNodeVectorOp_3qhtr")
nodes/fragment/6/position = Vector2(0, 180)
nodes/fragment/7/node = SubResource("VisualShaderNodeColorParameter_erdmr")
nodes/fragment/7/position = Vector2(-420, 360)
nodes/fragment/connections = PackedInt32Array(7, 0, 6, 1, 3, 0, 6, 0, 6, 0, 0, 0)
